<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prashant Bhardwaj</title>
    <link>/</link>
    <description>Recent content on Prashant Bhardwaj</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>copyright@Prashant</copyright>
    <lastBuildDate>Wed, 16 Oct 2019 22:56:24 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cassandra : How is data deleted and what are Tombstones?</title>
      <link>/posts/2019/10/cassandra-how-is-data-deleted-and-what-are-tombstones/</link>
      <pubDate>Wed, 16 Oct 2019 22:56:24 +0100</pubDate>
      
      <guid>/posts/2019/10/cassandra-how-is-data-deleted-and-what-are-tombstones/</guid>
      <description>Data in Cassandra is replcated on more than one node. In another terms - &amp;lsquo;Same data is copied on more than one node&amp;rsquo;. Any change in that data should be made in all the copies of that data stored on various nodes of a cluster. Same is applied for deletes as well. If a data is deleted then it should be deleted from all the nodes. But what if any node which has a copy of that data is down.</description>
    </item>
    
    <item>
      <title>Cassandra : Replication Strategies</title>
      <link>/posts/2019/09/cassandra-replication-strategies/</link>
      <pubDate>Sun, 29 Sep 2019 13:49:13 +0100</pubDate>
      
      <guid>/posts/2019/09/cassandra-replication-strategies/</guid>
      <description>There are two kinds of replication strategies in Cassandra.
SimpleStrategy SimpleStrategy is used when you have just one data center. SimpleStrategy places the first replica on the node selected by the partitioner. After that, remaining replicas are placed in clockwise direction in the Node ring.
NetworkTopologyStrategy NetworkTopologyStrategy is used when you have more than two data centers.
In NetworkTopologyStrategy, replicas are set for each data center separately. NetworkTopologyStrategy places replicas in the clockwise direction in the ring until reaches the first node in another rack.</description>
    </item>
    
    <item>
      <title>Cassandra : Consistency Levels List</title>
      <link>/posts/2019/09/cassandra-consistency-levels-list/</link>
      <pubDate>Sat, 28 Sep 2019 11:19:22 +0100</pubDate>
      
      <guid>/posts/2019/09/cassandra-consistency-levels-list/</guid>
      <description>Typical values of consistency levels are -
Note - Write operation consists of writing to commit log and memtable.
   Level Write Read Usage     ALL A write must be on all replica nodes in the cluster for that partition. Returns the record after all replicas. The read operation will fail if a replica does not respond. Provides the highest consistency and the lowest availability of any other level.</description>
    </item>
    
    <item>
      <title>Cassandra : Replication Factor &amp; Consistency Level</title>
      <link>/posts/2019/09/cassandra-replication-factor-consistency-level/</link>
      <pubDate>Sat, 28 Sep 2019 09:31:52 +0100</pubDate>
      
      <guid>/posts/2019/09/cassandra-replication-factor-consistency-level/</guid>
      <description>Replication Factor Whenever we start Cassandra, we start a cluster, which is a collection of 1 or more than one nodes. A cluster can be splitted onto more than one datacenter. Cassandra’s architecture was that the hardware failure can occur at any time. Any node can be down. Even entire datacenter can go down so it is better to add more than one data centers in your cluster. Cassandra stores data replicas on multiple nodes to ensure reliability and fault tolerance.</description>
    </item>
    
    <item>
      <title>Cassandra : When not to use</title>
      <link>/posts/2019/09/cassandra-when-not-to-use/</link>
      <pubDate>Thu, 19 Sep 2019 23:36:07 +0100</pubDate>
      
      <guid>/posts/2019/09/cassandra-when-not-to-use/</guid>
      <description>I don&amp;rsquo;t think that I need to explain what Cassandra is. OK, one liner is enough ! It is NoSQL database, primarily used in big data projects.
Before we start discussing scenarios where Cassandra fits very well, let&amp;rsquo;s discuss where it doesn&amp;rsquo;t fit at all.
Common mistakes when using Cassandra We&amp;rsquo;ll have lots of data, let&amp;rsquo;s use Cassandra
Cassandra is not a typical database which fits in every Big Data use case.</description>
    </item>
    
    <item>
      <title>Cassandra : Overview, how is data written and read?</title>
      <link>/posts/2019/09/cassandra-overview-how-is-data-written-and-read/</link>
      <pubDate>Sat, 14 Sep 2019 17:01:38 +0100</pubDate>
      
      <guid>/posts/2019/09/cassandra-overview-how-is-data-written-and-read/</guid>
      <description>Agenda  Characterstics How does it internally work References  The Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra&amp;rsquo;s support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages.</description>
    </item>
    
    <item>
      <title>Post2</title>
      <link>/hi/posts/post2/</link>
      <pubDate>Tue, 13 Aug 2019 23:10:51 +0100</pubDate>
      
      <guid>/hi/posts/post2/</guid>
      <description>पोस्ट 2</description>
    </item>
    
    <item>
      <title>Post1</title>
      <link>/hi/posts/post1/</link>
      <pubDate>Tue, 13 Aug 2019 22:40:43 +0100</pubDate>
      
      <guid>/hi/posts/post1/</guid>
      <description>पोस्ट १</description>
    </item>
    
    <item>
      <title>मेरा परिचय</title>
      <link>/hi/about/</link>
      <pubDate>Tue, 13 Aug 2019 00:40:27 +0100</pubDate>
      
      <guid>/hi/about/</guid>
      <description>मेरा परिचय</description>
    </item>
    
    <item>
      <title>Build your website using GoHugo and host it on GitHub Pages</title>
      <link>/posts/2019/08/build-your-website-using-gohugo-and-host-it-on-github-pages/</link>
      <pubDate>Mon, 12 Aug 2019 23:22:50 +0100</pubDate>
      
      <guid>/posts/2019/08/build-your-website-using-gohugo-and-host-it-on-github-pages/</guid>
      <description>Overview GitHub came up with GitHub pages service, which hosts static web content free of cost. For Tech bloggers and for those who are trying to make their hands dirty in static web content creation, this is the best service at this moment. Read tagline of GitHub Pages -
GoHugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, GoHugo makes building websites fun again.</description>
    </item>
    
  </channel>
</rss>