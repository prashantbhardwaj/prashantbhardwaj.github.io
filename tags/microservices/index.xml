<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>microservices on Prashant Bhardwaj</title>
    <link>/tags/microservices/</link>
    <description>Recent content in microservices on Prashant Bhardwaj</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>copyright@Prashant</copyright>
    <lastBuildDate>Mon, 03 Oct 2022 21:45:21 +0100</lastBuildDate><atom:link href="/tags/microservices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Microservices : Decomposition Strategies</title>
      <link>/posts/microservices-decomposition-strategies/</link>
      <pubDate>Mon, 03 Oct 2022 21:45:21 +0100</pubDate>
      
      <guid>/posts/microservices-decomposition-strategies/</guid>
      <description>Main idea behind Microservices pattern is to construct an application by developing interconnected smaller services.
Decomposition of an application into smaller services facilitates two things:
 Division of labor and knowledge Loose coupling of interactions  </description>
    </item>
    
    <item>
      <title>Microservices : Introduction</title>
      <link>/posts/microservices-introduction/</link>
      <pubDate>Mon, 03 Oct 2022 11:39:12 +0100</pubDate>
      
      <guid>/posts/microservices-introduction/</guid>
      <description>Microservice pattern is an architecture that functionally decomposes an application into a set of services. It doesn&amp;rsquo;t say anything about size. Each service has focused, cohesive set of responsibility.
 Characterstics of Microservice architecture  X, Y and Z-Axis Scalability of micro services (Michael Fisher&amp;rsquo;s book - The Art of Scalability (Addison-Wesley, 2015) - Scale cube) Microservices as a form of modularity Each service has its own database  How is this different from Service oriented architecture (SOA)?</description>
    </item>
    
    <item>
      <title>Software Architecture</title>
      <link>/posts/software-architecture/</link>
      <pubDate>Sat, 01 Oct 2022 22:37:40 +0100</pubDate>
      
      <guid>/posts/software-architecture/</guid>
      <description>Any software architecture of a computing system is the set of working components and relationsship between them. Exaple: Database, Message Broker, Server and an application running on that server.
 The 4+1 View Model Of Software Architecture More concretely, an application‚Äôs architecture can be viewed from multiple perspectives.
 üìö Phillip Krutchen: ‚ÄúArchitectural Blueprints‚ÄîThe ‚Äò4+1‚Äô View Model of Software Architecture‚Äù
  üîî A good architecture never enables you to satisfy your functional requirement, however it helps you to achieve the quality of service (non-functional and developer experience) requirements.</description>
    </item>
    
  </channel>
</rss>
